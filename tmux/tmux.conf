# set prefix to space.
unbind C-b
set -g prefix C-Space


# Allow screen-256 colors. Mainly for vim
#
 set -g default-terminal "screen-256color"



# bindings:
# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R


# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5







# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"


# Status bar.
set -g status-bg '#343d46'
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S â§‰ '
set -g status-right "#[fg=yellow]$USER@#h #[fg=magenta]%l:%M %p"
set -g status-interval 60 # Default is 15.


# highlight active window
set -w -g window-status-current-bg red

# Mouse control stuff
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#set -g mouse on
set -g mouse on
#bind m set -g mouse on
#bind M set -g mouse off
bind -n WheelUpPane if "[[ #{pane_current_command} =~ vim ]]" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Up"
bind -n WheelDownPane if "[[ #{pane_current_command} =~ vim ]]" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Down"

bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'




# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-a.
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i"




# default 256 color
set -g default-terminal "screen-256color"

# fixes issues scrolling with shift-PageUp/Down
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# faster command sequences
set -s escape-time 0

# VIM-style bindings between panes
unbind j
unbind k
unbind h
unbind l
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
setw -g mode-keys vi

# tab to enter copy-mode
unbind [
bind Tab copy-mode
# v to select
# bind-key -t vi-copy 'v' begin-selection
# y to yank
# bind-key -t vi-copy 'y' copy-selection
# P to paste
# unbind P
# bind P paste-buffer

# open man page with /
bind / command-prompt "split-window -h 'exec man %%'"

unbind *
bind * list-clients

# faster re-sourcing
bind r source-file ~/.tmux.conf \; display-message "  Config reloaded..."


# RESIZING
#
# when multiple clients are connected:
# only resize window when smallest client
# is *actively* looking at the screen
setw -g aggressive-resize on

unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2

# Commands.
#bind C-a last-window
unbind %
bind | split-window -h
bind _ split-window -v

# Status bar tweaks.
set-option -g status-bg blue
set-option -g status-fg black
set-option -g message-bg cyan
set-option -g message-fg white
set -g default-terminal "screen-256color"

# This is necessary if you want to be able to type immediately after switching
# panes.
set-option -g repeat-time 0

# tmux-powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 120
set-option -g status-left "#(~/configs/tmux-powerline/status-left.sh)"
set-option -g status-right "#(~/configs/tmux-powerline/status-right.sh)"

# Solarize
#### COLOUR

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green
