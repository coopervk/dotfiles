snippet .beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet


snippet .mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet .dm "Math" wA
\[
$1
.\] $0
endsnippet


snippet .ml "Math Aligned" wA
\begin{align*}
	$1
\end{align*}
endsnippet

snippet .int "integral" wA
\int_{$1}^{$2}$3
endsnippet


snippet .frac "frac" wA
\cfrac{$1}{$2}$3
endsnippet


snippet .bold "bold" wA
\textbf{$1}$2
endsnippet


snippet .text "text" wA
\text{$1}$2
endsnippet


snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet


snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippe


snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet


priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet
