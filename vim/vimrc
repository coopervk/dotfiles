let configs = [
\  "general",
\  "ui",
\  "plugins",
\]


for file in configs
  let x = expand("~/.vim/config/" . file . ".vim")
  if filereadable(x)
    execute 'source' x
  endif
endfor



function! ASMCompile()
	echo expand("%:p")
	silent !clear
	silent !execute "rm /tmp/out.s"
	execute "!clang -Iinclude -O3 -S -o /tmp/out.s -masm=intel " . expand("%:p")
	vsp /tmp/out.s
endfunction

:command ASMCompile :call ASMCompile()

map <leader>asm :ASMCompile<CR>



autocmd filetype crontab setlocal nobackup nowritebackup





" Change the scroll wheel from an actual scroll
" to just moving up and down with arrowkeys
map <ScrollWheelUp> <Up>
map <ScrollWheelDown> <Down>
map <ScrollWheelRight> <Right>
map <ScrollWheelLeft> <Left>



" Enables numbers on
map <C-c> :set nu!<CR>
set number
" Setup a toggle for nerd tree on ctr+n
map <C-n> :NERDTreeToggle<CR>
" Map ctrl+q and ctrl+Q to quit and SUPER quit :)
map <C-q> :q<CR>
map <C-Q> :q!<CR>
" Map esc to exit terminal mode
tnoremap <Esc> <C-\><C-n>
" Map ctrl + s to save in any mode
noremap <C-S> :update<CR>
vnoremap <C-S> <C-C>:update<CR>
inoremap <C-S> <C-O>:update<CR>

" Cursor motion
runtime! macros/matchit.vim


" set list
" set listchars=tab:\·\ ,trail:·,eol:\ ,nbsp:_
inoremap {<CR> {<CR>}<C-o>O



set smartindent
set noswapfile
let g:indentLine_fileTypeExclude=['help']
let g:indentLine_bufNameExclude=['NERD_tree.*']
let g:rainbow#max_level = 16
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]
"au VimEnter * RainbowParentheses


let g:indentLine_enabled = 1
set shortmess+=I
set visualbell t_vb= " disable visual bell
set ttyfast  " we have a fast terminal
set lazyredraw
set backspace=indent,eol,start
""" System Clipboard and COPY and PASTE support
set clipboard=unnamed
" Enable mouse mode in every mode
set mouse=a
set cursorline
" System copy and paste
set pastetoggle=<F2>
set scrolloff=4
set matchpairs+=<:> " use % to jump between pairs
" Searching
set incsearch
set ignorecase
set smartcase
set showmatch
map <leader><space> :let @/=''<cr> " clear search

map <C-d> :YcmForceCompileAndDiagnostics<CR>
map <S-Tab> :YcmCompleter GoTo<CR>
" Use tab to navitate blocks
" nnoremap <tab> %
