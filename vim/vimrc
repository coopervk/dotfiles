
"////////////////////////////////////////////////////////
"           ██
"          ░░
"  ██    ██ ██ ██████████  ██████  █████
" ░██   ░██░██░░██░░██░░██░░██░░█ ██░░░██
" ░░██ ░██ ░██ ░██ ░██ ░██ ░██ ░ ░██  ░░
"  ░░████  ░██ ░██ ░██ ░██ ░██   ░██   ██
"   ░░██   ░██ ███ ░██ ░██░███   ░░█████
"    ░░    ░░ ░░░  ░░  ░░ ░░░     ░░░░░
"
"    author: nick wanninger
"    email:  nickwanninger@gmail.com
"    mirror: git.csdisaster.club/
"
"////////////////////////////////////////////////////////




"////////////////////////////////////////////////////////
"   ____ _____ _   _ _____ ____      _    _
"  / ___| ____| \ | | ____|  _ \    / \  | |
" | |  _|  _| |  \| |  _| | |_) |  / _ \ | |
" | |_| | |___| |\  | |___|  _ <  / ___ \| |___
"  \____|_____|_| \_|_____|_| \_\/_/   \_\_____|
"////////////////////////////////////////////////////////

" a spot for general configuration and whatnot

" Don't try to be vi compatible
scriptencoding utf-8
filetype off
set nocompatible " Disable vi-compatibility
set noshowmode
set laststatus=0

set winminheight=0
noremap <C-A-left> <C-W>h<C-W>_
noremap <C-A-right> <C-W>l<C-W>_

set splitbelow
set splitright

set tabstop=2
set shiftwidth=2

set nofoldenable     "don't fold by default
set foldmethod=indent   " fold on indentations
set foldnestmax=10   "only fold up to 10 levels
set foldlevel=1     " only show me first fold level

let g:indentLine_enabled = 1
"set shortmess+=I
set visualbell t_vb= " disable visual bell
set ttyfast  " we have a fast terminal
set lazyredraw
set backspace=indent,eol,start
set clipboard=unnamed
set mouse=a
set cursorline
set pastetoggle=<F2>
set scrolloff=4
set matchpairs+=<:>
set incsearch
set ignorecase
set smartcase
set showmatch
set smartindent
set noswapfile
set number




" PLUGINS

"////////////////////////////////////////////////////////
set rtp+=~/.vim/bundle/vundle
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-vinegar'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'leafgarland/typescript-vim'
Plugin 'junegunn/limelight.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'junegunn/rainbow_parentheses.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'scrooloose/nerdtree'
Plugin 'valloric/youcompleteme'
Plugin 'dag/vim-fish'
Plugin 'rhysd/vim-clang-format'
Plugin 'eraserhd/parinfer-rust'
Plugin 'fatih/vim-go'
Plugin 'l04m33/vlime', {'rtp': 'vim/'}
call vundle#end()            " required
filetype plugin indent on    " required
"////////////////////////////////////////////////////////



"////////////////////////////////////////////////////////
let g:ctrlp_custom_ignore = 'vendor\|build\|node_modules\|bin\|DS_Store\|git\/'
let g:ctrlp_max_depth=40
let g:ctrlp_working_path_mode=''
"////////////////////////////////////////////////////////



"////////////////////////////////////////////////////////
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
"////////////////////////////////////////////////////////




"////////////////////////////////////////////////////////
let g:ycm_global_ycm_extra_conf = '~/dotfiles/vim/.ycm_extra_conf.py'
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_error_symbol = '!!'
let g:ycm_warning_symbol = '??'
"////////////////////////////////////////////////////////




"////////////////////////////////////////////////////////
let g:tmux_navigator_no_mappings = 1 " disable builtin mappings, I think
nnoremap <silent> <M-Left> :TmuxNavigateLeft<cr>
nnoremap <silent> <M-Down> :TmuxNavigateDown<cr>
nnoremap <silent> <M-Up> :TmuxNavigateUp<cr>
nnoremap <silent> <M-Right> :TmuxNavigateRight<cr>
"////////////////////////////////////////////////////////



"////////////////////////////////////////////////////////
let g:go_fmt_command = "goimports"
let g:go_term_mode = "split"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_interfaces = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
"////////////////////////////////////////////////////////


"////////////////////////////////////////////////////////
let g:indentLine_fileTypeExclude=['help']
let g:indentLine_bufNameExclude=['NERD_tree.*']
let g:rainbow#max_level = 16
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]
"////////////////////////////////////////////////////////






"////////////////////////////////////////////////////////
filetype plugin indent on
set wrap linebreak nolist
set wrap
set textwidth=0 wrapmargin=0
syntax on

if (has("mac"))
	if (has("termguicolors"))
		set termguicolors
	endif
endif


set background=dark
" colorscheme brogrammer
colorscheme dracula
" colorscheme github

hi Normal  ctermbg=NONE guibg=NONE
" hi Special ctermbg=NONE guibg=NONE
" hi NonText ctermbg=NONE guibg=NONE
" hi LineNr  ctermbg=NONE guibg=NONE

highlight ExtraWhitespace ctermbg=red guibg=#fabd2f
match ExtraWhitespace /\s\+\%#\@<!$/
"////////////////////////////////////////////////////////





" enable italics mode and other things
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"


" disable folding, hopefully. Its the worse
set nofoldenable " folding sucks

" show unicode glyphs
set encoding=utf-8 " Necessary to show Unicode glyphs


" setup some filetype mappings
au BufRead,BufNewFile *.g set filetype=geode
au BufRead,BufNewFile *.wl set filetype=clojure
au BufRead,BufNewFile *.cdr set filetype=clojure
autocmd Filetype haskell setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype lisp setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype c setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype cpp setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2





command WQ wq
command Wq wq
command W w
command Q q
nnoremap ; :


nnoremap <leader>d "_d
xnoremap <leader>d "_d
xnoremap <leader>p "_dP

map <C-\> <C-v>F\
map <space> <ESC>viw
nnoremap Q q
nnoremap q <Nop>
imap <C-Bslash> λ
imap <C-w> <esc>dbi


imap <C-/> hello

" This keeps the current visual block selection active
" after changing indent with '<' or '>'. Usually the
" visual block selection is lost after you shift it,
" which is incredibly annoying.
vmap > >gv
vmap < <gv


" disable writing different filename with :w<filename>
:autocmd BufWritePre [:;]*
\   try | echoerr 'Forbidden file name: ' . expand('<afile>') | endtry


autocmd filetype crontab setlocal nobackup nowritebackup

" Change the scroll wheel from an actual scroll
" to just moving up and down with arrowkeys
map <ScrollWheelUp> <Up>
map <ScrollWheelDown> <Down>
map <ScrollWheelRight> <Right>
map <ScrollWheelLeft> <Left>
map <C-c> :set nu!<CR>
map <C-n> :NERDTreeToggle<CR>
map <C-q> :q<CR>
map <C-Q> :q!<CR>
map <leader>/ :let @/=''<cr>"
map <C-d> :YcmForceCompileAndDiagnostics<CR>
map <S-Tab> :YcmCompleter GoTo<CR>


map <leader>f :ClangFormat<CR>

noremap <C-S> :update<CR>
vnoremap <C-S> <C-C>:update<CR>
inoremap <C-S> <C-O>:update<CR>

" Cursor motion
runtime! macros/matchit.vim

"set list
"set listchars=tab:\·\ ,trail:·,eol:\ ,nbsp:_
inoremap {<CR> {<CR>}<C-o>O



" split style
set fillchars=vert:▒







function! ASMCompile()
	echo expand("%:p")
	silent !clear
	silent !execute "rm /tmp/out.s"
	execute "!clang -Iinclude -O3 -S -o /tmp/out.s -masm=intel " . expand("%:p")
	vsp /tmp/out.s
endfunction

:command ASMCompile :call ASMCompile()

map <leader>asm :ASMCompile<CR>
