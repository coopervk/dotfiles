" Don't try to be vi compatible
scriptencoding utf-8
filetype off
set nocompatible   " Disable vi-compatibility
" set noshowmode
set laststatus=2   " Always show the statusline

set encoding=utf-8 " Necessary to show Unicode glyphs

let g:ctrlp_custom_ignore = 'vendor\|build\|node_modules\|DS_Store\|git\/'
let g:ctrlp_max_depth=40
let g:ctrlp_working_path_mode=''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
	

" let g:Powerline_symbols = 'fancy'
let g:ycm_global_ycm_extra_conf = '~/dotfiles/vim/.ycm_extra_conf.py'

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'leafgarland/typescript-vim'
Plugin 'junegunn/limelight.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'Lokaltog/vim-powerline'
" Plugin 'itchyny/lightline.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-commentary'
Plugin 'xuhdev/vim-latex-live-preview'
Plugin 'valloric/youcompleteme'
Plugin 'wincent/terminus'
Bundle 'dag/vim-fish'
Plugin 'sjl/gundo.vim'
Plugin 'lluchs/vim-wren'
Plugin 'joom/latex-unicoder.vim'
Plugin 'fatih/vim-go' 
call vundle#end()            " required
filetype plugin indent on    " required
set smartindent
set noswapfile


nnoremap <C-g> :GundoToggle<CR>

autocmd filetype crontab setlocal nobackup nowritebackup

syntax on
set background=dark
" Pick a colorscheme
colorscheme draculablack

let g:color_scheme = "dark"
function! ToggleSyntaxColor()
   if g:color_scheme == "dark"
      let g:color_scheme = "light"
			colorscheme github
   else
      let g:color_scheme = "dark"
			colorscheme draculablack
   endif
endfunction



au BufRead,BufNewFile *.g set filetype=geode

" map <C-C> :call ToggleSyntaxColor()<CR>


map <C-\> <C-v>F\
map <space> <ESC>viw



" Insert a lambda: mostly for scheme and haskell
imap <C-Bslash> Î»



" This keeps the current visual block selection active
" after changing indent with '<' or '>'. Usually the 
" visual block selection is lost after you shift it,
" which is incredibly annoying.
vmap > >gv
vmap < <gv

let g:jellybeans_use_term_background_color = 1
filetype plugin indent on

set ttyfast  " we have a fast terminal
set lazyredraw
set backspace=indent,eol,start

""" System Clipboard and COPY and PASTE support
set clipboard=unnamed

" Enable mouse mode in every mode
set mouse=a

" Change the scroll wheel from an actual scroll
" to just moving up and down with arrowkeys
map <ScrollWheelUp> <Up>
map <ScrollWheelDown> <Down>
map <ScrollWheelRight> <Right>
map <ScrollWheelLeft> <Left>

" Enables numbers on 
set number

" Map ctrl+d to toggling the relative numbers
" on the side of the screen

" Disable the bell in vim
set visualbell t_vb=

" Setup a toggle for nerd tree on ctr+n
map <C-n> :NERDTreeToggle<CR>

" Map ctrl+q and ctrl+Q to quit and SUPER quit :)
map <C-q> :q<CR>
map <C-Q> :q!<CR>


" Map esc to exit terminal mode
tnoremap <Esc> <C-\><C-n>



" System copy and paste
set pastetoggle=<F2>



" tell me when i'm running on too long
" highlight OverLength ctermbg=red 
" match OverLength /\%80v.\+/

" Copy paste to/from clipboard
vnoremap <C-c> "*y
map <silent><Leader>p :set paste<CR>o<esc>"*]p:set nopaste<cr>"
map <silent><Leader><S-p> :set paste<CR>O<esc>"*]p:set nopaste<cr>"

" Map ctrl + s to save in any mode
noremap <C-S> :update<CR>
vnoremap <C-S> <C-C>:update<CR>
inoremap <C-S> <C-O>:update<CR>



" Cursor motion
set scrolloff=8
set matchpairs+=<:> " use % to jump between pairs
runtime! macros/matchit.vim

" Last line
" set showcmd

" Searching
set incsearch
set ignorecase
set smartcase
set showmatch
map <leader><space> :let @/=''<cr> " clear search


" Quicker window manangement
"nnoremap <C-j> <C-w>j
"nnoremap <C-k> <C-w>k
"nnoremap <C-h> <C-w>h
"nnoremap <C-l> <C-w>l

" Shortcut to indent the file
" nnoremap <C-F> gg=G

" Use tab to navitate blocks
nnoremap <tab> %

" Split pane navigation mappings
set winheight=999
set winminheight=0
noremap <C-A-left> <C-W>h<C-W>_
noremap <C-A-right> <C-W>l<C-W>_

set splitbelow
set splitright

set tabstop=2
set shiftwidth=2


autocmd Filetype haskell setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4

nnoremap tn :tabnew<Space>
nnoremap tl :tabnext<CR>
nnoremap th :tabprev<CR>
nnoremap tj :tabfirst<CR>
nnoremap tk :tablast<CR>
nnoremap tq :tabclose<CR>



command WQ wq
command Wq wq
command W w
command Q q
nnoremap ; :

"set up code folding
set nofoldenable     "don't fold by default
set foldmethod=indent   " fold on indentations
set foldnestmax=10   "only fold up to 10 levels
set foldlevel=1     " only show me first fold level


" set statusline+=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %{noscrollbar#statusline(20,'_','=')}
